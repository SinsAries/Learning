from hashlib import sha512

# f = open("output.txt", "r")
# p = int(f.readline().strip())
# g = tuple(map(int, f.readline().strip()[1:-1].split(", ")))
# A = tuple(map(int, f.readline().strip()[1:-1].split(", ")))
# B = tuple(map(int, f.readline().strip()[1:-1].split(", ")))
# flag = f.readline().strip()[2:-1].encode()

p = 118137784935135970337510271849580086848254171356765665011694244023208461540446914850707468057282751248179994619123633255493120164303269100357288277434916448490441959021405028582586473668367624657501266728535398364364534643785521020045224917599949786101754491141066152294712601274348300812051676312686005653903
g = (107092985977898881725589319381259563834317554951879079449233514839185316428335325993876889099954500272723116441146209743182358463820869318509944945867977624551524056845255334701746355271693704756559601915443989993131349624007570039590066604471363965652931147692648179242614201368558061014929043550856685541504, 52347050075878646017443179605562318803054223236027337078804482748710845947212454152592867295124673045370184989636942634837571218912594518218890082956923877208427976229729016982782181855367483864009378126267522149991129279747035930082292996507450510717030726693517031648122529957288846494178723326801005577081)
A = (60742259912535581325747571008343266724497149086853417445462350349202275795237346007196314847881697865217095648664286579867577527655827991033129809403665387215330364226879411579548136063096707672124417796246723378346858731973710671945675152428589380138702183212701161427914058347348391445684562252323394608202, 93325780862638959738183747579239971660126166893257493285687252155655318334821335902969411644620964852039522007716668076096631435993062202506838078717187180463057881959508244938121967252877187812319876719059197810474186808042037003284393695852636681172547540619562824128170624111038451733794000903821549029558)
B = (6776539314654833557268980129783479333289529706941763525330300512827197519605021297915682211079620771486619179699350300174811393669074865885240424691584590367514263096030772341536911549241559285724131076095272615632031883865131004039668490022759728622149367717358999874537812723757677277857270478271281598555, 29390366888216023638355567839135413339652377827600536564028719824978928123972245319121541096492076620656295757979238273584724493500946107859464561799960120554105746944122635728505124944739444503598364240932233842567550509617630307691743246677998151833343224054683645252423829492720199613510391786793505100920)

Pair = tuple[int, int]

def apply(x: Pair, y: Pair) -> Pair:
    z0 = x[0] * y[1] + x[1] * y[0] - x[0] * y[0]
    z1 = x[0] * y[0] + x[1] * y[1]
    return z0 % p, z1 % p

base = 1, 1

B = apply(A, B)
shared = (B[0] - g[0]) % p, (B[1] - g[1]) % p
print(shared)

pad = sha512(str(shared).encode()).digest()
def xor(a: bytes, b: bytes) -> bytes:
    return bytes(i ^ j for i, j in zip(a, b))
# print(xor(flag, pad))

